services:
  postgres:
    image: timescale/timescaledb-ha:pg16
    restart: unless-stopped
    container_name: postgres
    ports:
      - "0.0.0.0:5228:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./env/dev/service/postgres/init:/docker-entrypoint-initdb.d
      - ./env/dev/service/postgres/init/postgresql.conf:/etc/postgresql/postgresql.conf
    env_file:
      - ./env/dev/service/postgres/secret/postgres-secret.env
      - ./env/dev/service/postgres/postgres.env
    environment:
      - PGDATA=/var/lib/postgresql/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
    command: postgres -c config_file=/etc/postgresql/postgresql.conf

  testbot:
    image: testbot:latest
    container_name: testbot
    build:
      context: .
      args:
        DOCKER_BUILDKIT: 1
    restart: on-failure
    env_file:
      # component related env
      - ./env/dev/bot/telegram.env
      - ./env/dev/bot/postgres.env
      - ./env/dev/service/postgres/postgres.env
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      start_period: 15s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
